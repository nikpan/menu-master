{"version":3,"sources":["utils/localStorageUtil.ts","hooks/useArray.ts","constants/ingredientMasterList.ts","components/TogglePill.tsx","hooks/useToggleList.ts","components/IngredientCategoryCard.tsx","views/PantryPage.tsx","constants/recipeMasterList.ts","components/RecipeCard.tsx","views/RecipePage.tsx","App.tsx","index.tsx"],"names":["getStoredPantry","storedPantryString","localStorage","getItem","JSON","parse","_unused","useArray","_useState","useState","_useState2","Object","slicedToArray","items","setItems","useEffect","pantry","setItem","stringify","addItem","item","toConsumableArray","concat","removeItem","filter","i","allIngredients","categoryName","ingredients","name","selected","ChipContainer","styled","Box","_templateObject","taggedTemplateLiteral","TogglePill","props","onClick","react_default","a","createElement","Chip","variant","label","useToggleList","list","initialPantryList","map","includes","toggleItem","newItems","findIndex","AccordionSummaryContainer","AccordionSummary","IngredientCategoryCard_templateObject","AccordionDetailsContainer","AccordionDetails","_templateObject2","CardContainer","Card","_templateObject3","IngredientCategoryCard","_useToggleList","Accordion","defaultExpanded","expandIcon","ExpandMore_default","components_TogglePill","assign","key","PantryPage","category","components_IngredientCategoryCard","recipes","RecipeCard_templateObject","BoxContainer","RecipeCard_templateObject2","RecipeCard","_props$recipe","recipe","RecipeCard_CardContainer","RecipePage","pantryList","listRecipes","length","indexOf","components_RecipeCard","AppContainer","App_templateObject","App","_useArray","_React$useState","React","_React$useState2","value","setValue","className","sx","width","BottomNavigation","showLabels","onChange","_event","newValue","BottomNavigationAction","icon","Kitchen_default","MenuBook_default","views_PantryPage","Fragment","views_RecipePage","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.910cd148.chunk.js","sourcesContent":["const lsPantryKey = 'bite2eat:pantry'\n\nexport const getStoredPantry = () => {\n  const storedPantryString = localStorage.getItem(lsPantryKey);\n  if(storedPantryString) {\n    try {\n      const pantryData: string[] = JSON.parse(storedPantryString);\n      return pantryData;\n    } catch {\n      return [];\n    }\n  } else {\n    return [];\n  }\n}\n\nexport const setStoredPantry = (pantry: string[]) => {\n  localStorage.setItem(lsPantryKey, JSON.stringify(pantry));\n}","import { useEffect, useState } from \"react\";\nimport { getStoredPantry, setStoredPantry } from \"../utils/localStorageUtil\";\n\nconst useArray = () => {\n  const [items, setItems] = useState<Array<string>>(getStoredPantry());\n\n  const addItem = (item: string) => {\n    setItems([...items].concat([item]));\n  }\n\n  const removeItem = (item: string) => {\n    setItems(items.filter(i => i !== item));\n  }\n\n  useEffect(() => {\n    setStoredPantry(items);\n  }, [items]);\n\n  return { items, addItem, removeItem };\n}\n\nexport default useArray;","export type Ingredient = {\n  name: string,\n  selected: boolean\n}\n\nexport type IngredientCategory = {\n  categoryName: string,\n  ingredients: Ingredient[]\n}\n\nexport const allIngredients: IngredientCategory[] = [\n  {\n    categoryName: 'Vegetables',\n    ingredients: [\n      { name: 'Potato', selected: false },\n      { name: 'Sweet Potato', selected: false },\n      { name: 'Cauliflower', selected: false },\n      { name: 'Squash', selected: false },\n      { name: 'Cabbage', selected: false },\n      { name: 'Spinach', selected: false },\n      { name: 'Brocolli', selected: false },\n      { name: 'Peas', selected: false },\n      { name: 'Green Capsicum', selected: false },\n      { name: 'Mushroom', selected: false },\n      { name: 'Carrot', selected: false },\n      { name: 'Bottle Gourd', selected: false },\n      { name: 'Spring Onion', selected: false }\n    ]\n  },\n  {\n    categoryName: 'Legumes',\n    ingredients: [\n      { name: 'Besan', selected: false },\n      { name: 'Chickpea', selected: false },\n      { name: 'Black Chana', selected: false },\n      { name: 'Black Eyed Peas', selected: false },\n      { name: 'Tur Dal', selected: false },\n      { name: 'Chana Dal', selected: false },\n      { name: 'Masoor Dal', selected: false },\n      { name: 'Urad Dal', selected: false },\n      { name: 'Kidney Beans', selected: false },\n      { name: 'Moong Dal', selected: false },\n    ]\n  },\n  {\n    categoryName: 'Essentials',\n    ingredients: [\n      { name: 'Tomato', selected: false },\n      { name: 'Onion', selected: false },\n      { name: 'Bread', selected: false },\n      { name: 'Garlic', selected: false },\n      { name: 'Ginger', selected: false },\n      { name: 'Pasta', selected: false },\n      { name: 'Flour', selected: false },\n      { name: 'Rice', selected: false },\n    ]\n  },\n  {\n    categoryName: 'Herbs / Spices',\n    ingredients: [\n      { name: 'Cilantro', selected: false },\n      { name: 'Basil', selected: false },\n      { name: 'Parsley', selected: false },\n    ]\n  },\n  {\n    categoryName: 'Meats',\n    ingredients: [\n      { name: 'Mutton', selected: false },\n      { name: 'Chicken', selected: false },\n      { name: 'Fish', selected: false },\n      { name: 'Shrimp', selected: false },\n    ]\n  },\n  {\n    categoryName: 'Dairy & Eggs',\n    ingredients: [\n      { name: 'Milk', selected: false },\n      { name: 'Egg', selected: false },\n      { name: 'Paneer', selected: false },\n      { name: 'Yoghurt', selected: false },\n      { name: 'Cheese', selected: false },\n    ]\n  },\n];\n","import React from 'react';\nimport { Box, Chip, styled } from '@mui/material';\n\ninterface TogglePillProps {\n  name: string,\n  selected: boolean,\n  onClick?: () => void;\n}\n\nconst ChipContainer = styled(Box)`\n  padding: 10px;\n`;\n\nconst TogglePill = (props: TogglePillProps) => {\n  const { name, selected, onClick } = props;\n\n  return (\n    <ChipContainer onClick={onClick}>\n      <Chip variant={selected ? 'filled' : 'outlined'} label={name} />\n    </ChipContainer>\n  )\n}\n\nexport default TogglePill;","import { useState } from \"react\";\nimport { getStoredPantry } from \"../utils/localStorageUtil\";\n\ntype Ingredient = {\n  name: string,\n  selected: boolean\n}\n\nconst useToggleList = (list: Ingredient[]) => {\n  const initialPantryList: string[] = getStoredPantry();\n  const [items, setItems] = useState(list.map(item => {\n    return {\n      name: item.name,\n      selected: initialPantryList.includes(item.name)\n    }\n  }));\n\n  const toggleItem = (name: string) => {\n    let newItems = [...items];\n    const i = newItems.findIndex(item => item.name === name);\n    if (i !== -1) {\n      newItems[i].selected = !newItems[i].selected;\n      setItems(newItems);\n    }\n  }\n\n  return { items, toggleItem };\n}\n\nexport default useToggleList;","import React from 'react';\nimport { Accordion, AccordionDetails, AccordionSummary, styled } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport TogglePill from './TogglePill';\nimport useToggleList from '../hooks/useToggleList';\n\ninterface IngredientCategoryCardProps {\n  categoryName: string,\n  ingredients: Ingredient[],\n  addItem: (name: string) => void,\n  removeItem: (name: string) => void\n}\n\ninterface Ingredient {\n  name: string,\n  selected: boolean\n}\n\nconst AccordionSummaryContainer = styled(AccordionSummary)`\n  background-color: lightblue;\n`;\n\nconst AccordionDetailsContainer = styled(AccordionDetails)`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst CardContainer = styled(Card)`\n  margin-bottom: 1rem;\n`;\n\nconst IngredientCategoryCard = (props: IngredientCategoryCardProps) => {\n  const { categoryName, ingredients, addItem, removeItem } = props;\n  const { items, toggleItem } = useToggleList(ingredients);\n  return (\n    <CardContainer>\n      <Accordion defaultExpanded>\n        <AccordionSummaryContainer expandIcon={<ExpandMoreIcon />}>\n          {categoryName}\n        </AccordionSummaryContainer>\n        <AccordionDetailsContainer>\n          {items.map(item => (\n            <TogglePill\n              key={item.name}\n              {...item}\n              onClick={() => {\n                toggleItem(item.name);\n                if (item.selected) {\n                  addItem(item.name);\n                } else {\n                  removeItem(item.name);\n                }\n              }}\n            />))}\n        </AccordionDetailsContainer>\n      </Accordion>\n    </CardContainer>\n  );\n}\n\nexport default IngredientCategoryCard;","import React from 'react';\nimport { Box } from '@mui/material';\nimport { allIngredients } from '../constants/ingredientMasterList';\nimport IngredientCategoryCard from '../components/IngredientCategoryCard';\n\ninterface PantryPageProps {\n  addItem: (name: string) => void;\n  removeItem: (name: string) => void;\n}\n\nconst PantryPage = (props: PantryPageProps) => {\n  const { addItem, removeItem } = props;\n  return (\n    <Box>\n      {allIngredients.map(category => (\n        <IngredientCategoryCard\n          key={category.categoryName}\n          {...category}\n          addItem={addItem}\n          removeItem={removeItem} />\n      ))}\n    </Box>\n  )\n}\n\nexport default PantryPage;","export type Recipe = {\n  name: string,\n  ingredients: string[]\n}\n\nexport const recipes: Recipe[] = [\n  {\n    name: 'Aloo Paratha',\n    ingredients: ['Potato','Flour']\n  },  \n  {\n    name: 'Palak Paratha',\n    ingredients: ['Spinach', 'Flour']\n  },\n  {\n    name: 'Gobi Paratha',\n    ingredients: ['Cauliflower', 'Flour']\n  },\n  {\n    name: 'Aloo Gobi',\n    ingredients: ['Potato', 'Cauliflower']\n  },\n  {\n    name: 'Aloo Palak',\n    ingredients: ['Potato', 'Spinach']\n  },\n  {\n    name: 'Aloo Matar',\n    ingredients: ['Potato', 'Peas']\n  },\n  {\n    name: 'Aloo Jeera',\n    ingredients: ['Potato']\n  },\n  {\n    name: 'Dum Aloo',\n    ingredients: ['Potato']\n  },\n  {\n    name: 'Matar Paneer',\n    ingredients: ['Paneer', 'Peas']\n  },\n  {\n    name: 'Paneer Do Pyaaza',\n    ingredients: ['Paneer', 'Onion', 'Green Capsicum']\n  },\n  {\n    name: 'Palak Paneer',\n    ingredients: ['Spinach', 'Paneer']\n  },\n  {\n    name: 'Potato Gnocchi',\n    ingredients: ['Potato', 'Flour']\n  },\n  {\n    name: 'Sweet Potato Gnocchi',\n    ingredients: ['Sweet Potato', 'Flour']\n  },\n  {\n    name: 'Spaghetti Aglio Olio',\n    ingredients: ['Pasta', 'Garlic']\n  },\n  {\n    name: 'Red Pasta',\n    ingredients: ['Pasta', 'Tomato']\n  },\n  {\n    name: 'Shrimp Masala',\n    ingredients: ['Shrimp']\n  },\n  {\n    name: 'Mushroom Masala',\n    ingredients: ['Mushroom']\n  },\n  {\n    name: 'Pav Bhaji',\n    ingredients: ['Carrot', 'Potato', 'Tomato', 'Onion', 'Green Capsicum', 'Peas']\n  },\n  {\n    name: 'Egg Bhurji',\n    ingredients: ['Egg']\n  },\n  {\n    name: 'Egg Fried Rice',\n    ingredients: ['Egg', 'Rice']\n  },\n  {\n    name: 'Lauki Sabji',\n    ingredients: ['Bottle Gourd']\n  },\n  {\n    name: 'Lauki Thalipeeth',\n    ingredients: ['Bottle Gourd']\n  },\n  {\n    name: 'Aite',\n    ingredients: ['Spring Onion', 'Rice']\n  },\n  {\n    name: 'Pithla',\n    ingredients: ['Besan']\n  },\n  {\n    name: 'Masoor Dal',\n    ingredients: ['Masoor Dal']\n  },\n  {\n    name: 'Tur Dal',\n    ingredients: ['Tur Dal']\n  },\n  {\n    name: 'Dal Makhni',\n    ingredients: ['Urad Dal', 'Kidney Beans']\n  },\n  {\n    name: 'Chavli chi bhaji',\n    ingredients: ['Black Eyed Peas']\n  },\n  {\n    name: 'Moong Dal',\n    ingredients: ['Moong Dal']\n  },\n  {\n    name: 'Chole',\n    ingredients: ['Chickpea']\n  },\n  {\n    name: 'Chane',\n    ingredients: ['Black Chana']\n  }\n]","import React from 'react';\nimport { Box, Card, styled } from \"@mui/material\";\nimport { Recipe } from \"../constants/recipeMasterList\";\nimport TogglePill from \"./TogglePill\";\n\ninterface RecipeCardProps {\n  recipe: Recipe;\n}\n\nconst CardContainer = styled(Card)`\n  padding: 1rem;\n`;\n\nconst BoxContainer = styled(Box)`\n  display: flex;\n`;\n\nconst RecipeCard = (props: RecipeCardProps) => {\n  const { name, ingredients } = props.recipe;\n  return (\n    <CardContainer>\n      <p>{name}</p>\n      <BoxContainer>\n        {ingredients.map(item => (<TogglePill key={item} name={item} selected={false} />))}\n      </BoxContainer>\n    </CardContainer>\n  )\n}\n\nexport default RecipeCard;","import React from 'react';\nimport { Box } from '@mui/material';\nimport { recipes } from '../constants/recipeMasterList';\nimport RecipeCard from '../components/RecipeCard';\n\ninterface RecipePageProps {\n  pantryList: string[];\n}\n\nconst RecipePage = (props: RecipePageProps) => {\n  const { pantryList } = props;\n  const listRecipes = recipes.filter(recipe => {\n    for (let i = 0; i < recipe.ingredients.length; i++) {\n      if (pantryList.indexOf(recipe.ingredients[i]) === -1) {\n        return false;\n      }\n    }\n    return true;\n  });\n\n  return (\n    <Box>\n      {listRecipes.map(recipe => (\n        <RecipeCard key={recipe.name} recipe={recipe} />\n      ))}\n    </Box>\n  )\n}\n\nexport default RecipePage;","import React from 'react';\nimport './App.css';\nimport useArray from './hooks/useArray';\nimport { BottomNavigation, BottomNavigationAction, Box, styled } from '@mui/material';\nimport KitchenIcon from '@mui/icons-material/Kitchen';\nimport MenuBookIcon from '@mui/icons-material/MenuBook';\nimport PantryPage from './views/PantryPage';\nimport RecipePage from './views/RecipePage';\n\nconst AppContainer = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nfunction App() {\n  const { items: pantry, addItem, removeItem } = useArray();\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <AppContainer className=\"App\">\n      <header className=\"App-header\">\n        <Box sx={{ width: '100vw' }}>\n          <BottomNavigation\n            showLabels\n            value={value}\n            onChange={(_event, newValue) => {\n              setValue(newValue);\n            }}\n          >\n            <BottomNavigationAction label=\"Pantry\" icon={<KitchenIcon />} />\n            <BottomNavigationAction label=\"Recipes\" icon={<MenuBookIcon />} />\n          </BottomNavigation>\n        </Box>\n      </header>\n      <Box sx={{ width: '100vw' }}>\n        {value === 0 ? <PantryPage addItem={addItem} removeItem={removeItem} /> : <></>}\n        {value === 1 ? <RecipePage pantryList={pantry} /> : <></>}\n      </Box>\n    </AppContainer>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}